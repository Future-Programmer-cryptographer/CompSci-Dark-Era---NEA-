FUNCTION mergeSort(leaderboard)
    IF LEN(leaderboard) <= 1 THEN 
        RETURN leaderboard
    ENDIF 

    middle = FLOOR(LEN(leaderboard)/2) 
    leftHalf = leaderboard[:middle]
    rightHalf =  leaderboard[middle:]

    mergeSort(leftHalf)
    mergeSort(rightHalf)

    RETURN merge(leftHalf, rightHalf)
ENDFUNCTION

FUNCTION merge(leftHalf, rightHalf)
    sortedList = [] 
    i = 0 
    j = 0 

    WHILE i < LEN(leftHalf) AND j < LEN(rightHalf) 
        IF leftHalf[i] < rightHalf[j] THEN 
            sortedList.APPEND(leftHalf[i])
            i = i + 1 
        ELSE 
            sortedList.APPEND(rightHalf[j])
            j += 1 
        ENDIF 
    ENDWHILE 

    WHILE i < LEN(leftHalf)
            sortedList.APPEND(left[i])
            i += 1 
    ENDWHILE 
        
    WHILE j < LEN(rightHalf)
        sortedList.APPEND(rightHalf[j])
        j += 1    
    ENDWHILE 

    RETURN sortedList
ENDFUNCTION
